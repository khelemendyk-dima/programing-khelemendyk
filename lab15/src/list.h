#ifndef LAB_15_LIST_H
#define LAB_15_LIST_H

/**
 * @file list.h
 * @brief Файл з описом функцій: отримання позиції для додавання 
 * та видалення елемента, додавання та видалення лампочки 
 * у динамічному масиві, знаходження згорілих лампочок, 
 * сортування за критерієм, виводом у консоль всіх лампочок.
 *
 * @author Khelemendyk D.
 * @date 01-may-2022
 * @version 0.1
 */

#include "entity.h"

/**
 * Структура "контейнер". Зберігає структуру "лампочка"
 * та її розмір.
 */
struct Container {
	struct Bulb *bulbs;
	size_t size;
};

/**
 * Отримання позиції для додавання елемента у контейнер.
 *
 * Функція запитує у користувача в яку позицію записати елемент 
 * у контейнер, якщо він не нульовий.
 * Отримує розмір структури.
 */
size_t get_position_to_add(size_t size);
/**
 * Отримання позиції для видалення елемента з контейнера.
 *
 * Функція запитує у користувача в який елемент видалити 
 * у контейнері.
 * Отримує розмір структури.
 */
size_t get_position_to_remove(size_t size);
/**
 * Додавання лампочки у контейнер.
 *
 * Функція виділяє пам'ять для більшого масива, переписує 
 * в нього старі лампочки(якщо вони є) та додає нову лампочку.
 * Отримує показчик на контейнер, позицію для додавання, 
 * показчик на елемент.
 */
void insert_bulb(struct Container *container, size_t pos, struct Bulb *bulb);
/**
 * Видалення елемента з контейнера.
 *
 * Функція видаляє елемент з контейнера.
 * Отримує показчик на контейнер, позицію для видалення.
 */
void remove_bulb(struct Container *container, size_t pos);
/**
 * Чи згоріла лампочка?
 *
 * Функція перевіряє чи згоріла хоча б одна одна лампочка.
 * Отримує показчик на контейнер.
 * Повертає 1, якщо хоча б одна лампочка згоріла.
 */
int is_burned_bulb(struct Container *container);
/**
 * Друк згорівших лампочок.
 *
 * Функція друкує згорівші лампочки.
 * Отримує показчик на структуру та кількість лампочок.
 */
void print_burned_bulbs(struct Container *cont);
/**
 * Знаходження згорівших лампочок.
 *
 * Функція перевіряє чи є лампочки взагалі, якщо є - перевіряє 
 * на наявність згорівшої лампочки функцією is_burned_bulb, 
 * та при наявності хоча б однієї згорівшої лампочки - друкує її 
 * за допомогою функції print_burned_bulbs.
 * Отримує показчик на контейнер.
 */
void find_burned_bulbs(struct Container *container);
/**
 * Сортування лампочок за критерієм.
 *
 * Функція запитує критерій для сортування та друкує 
 * відсортованні лампочки.
 * Отримує показчик на контейнер.
 */
void sort_by_criterion(struct Container *cont);
/**
 * Друк лампочок.
 *
 * Функція друкує лампочки, якщо вони є.
 * Отримує показчик на контейнер.
 */
void print_bulbs(struct Container *cont);
#endif